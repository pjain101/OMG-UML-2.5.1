///////////////////////////////////////////////////////////
//  Dependency.cs
//  Implementation of the Class Dependency
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 21:59:58
//  Original author: Андрей
///////////////////////////////////////////////////////////

namespace UML.CommonStructure
{
    /// <summary>
    ///     A Dependency is a Relationship that signifies that a single model Element or a
    ///     set of model Elements requires other model Elements for their specification or
    ///     implementation. This means that the complete semantics of the client Element(s)
    ///     are either semantically or structurally dependent on the definition of the
    ///     supplier Element(s).
    /// </summary>
    public interface Dependency : PackageableElement, DirectedRelationship
    {
        /// <summary>
        ///     The Element(s) on which the client Element(s) depend in some respect. The
        ///     modeler may stipulate a sense of Dependency direction suitable for their domain.
        /// </summary>
        NamedElement supplier { get; set; }

        /// <summary>
        ///     The Element(s) dependent on the supplier Element(s). In some cases (such as a
        ///     trace Abstraction) the assignment of direction (that is, the designation of the
        ///     client Element) is at the discretion of the modeler and is a stipulation.
        /// </summary>
        NamedElement client { get; set; }
    }
} //end namespace CommonStructure