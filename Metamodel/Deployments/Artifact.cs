///////////////////////////////////////////////////////////
//  Artifact.cs
//  Implementation of the Class Artifact
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 21:59:53
//  Original author: Андрей
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using UML.Classification;

namespace UML.Deployments
{
    /// <summary>
    ///     An artifact is the specification of a physical piece of information that is
    ///     used or produced by a software development process, or by deployment and
    ///     operation of a system. Examples of artifacts include model files, source files,
    ///     scripts, and binary executable files, a table in a database system, a
    ///     development deliverable, or a word-processing document, a mail message.
    ///     An artifact is the source of a deployment to a node.
    /// </summary>
    public interface Artifact : DeployedArtifact, Classifier
    {
        /// <summary>
        ///     A concrete name that is used to refer to the Artifact in a physical context.
        ///     Example: file system name, universal resource locator.
        /// </summary>
        string fileName { get; set; }

        /// <summary>
        ///     The set of model elements that are manifested in the Artifact. That is, these
        ///     model elements are utilized in the construction (or generation) of the artifact.
        /// </summary>
        IEnumerable<Manifestation> manifestation { get; set; }

        /// <summary>
        ///     The Artifacts that are defined (nested) within the Artifact. The association is
        ///     a specialization of the ownedMember association from Namespace to NamedElement.
        /// </summary>
        IEnumerable<Artifact> nestedArtifact { get; set; }

        /// <summary>
        ///     The Operations defined for the Artifact. The association is a specialization of
        ///     the ownedMember association.
        /// </summary>
        IEnumerable<Operation> ownedOperation { get; set; }

        /// <summary>
        ///     The attributes or association ends defined for the Artifact. The association is
        ///     a specialization of the ownedMember association.
        /// </summary>
        IEnumerable<Property> ownedAttribute { get; set; }
    }
} //end namespace Deployments