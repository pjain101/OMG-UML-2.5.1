///////////////////////////////////////////////////////////
//  CallOperationAction.cs
//  Implementation of the Class CallOperationAction
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 21:59:54
//  Original author: Андрей
///////////////////////////////////////////////////////////

using UML.Classification;

namespace UML.Actions
{
    /// <summary>
    ///     A CallOperationAction is a CallAction that transmits an Operation call request
    ///     to the target object, where it may cause the invocation of associated Behavior.
    ///     The argument values of the CallOperationAction are passed on the input
    ///     Parameters of the Operation. If call is synchronous, the execution of the
    ///     CallOperationAction waits until the execution of the invoked Operation
    ///     completes and the values of output Parameters of the Operation are placed on
    ///     the result OutputPins. If the call is asynchronous, the CallOperationAction
    ///     completes immediately and no results values can be provided.
    /// </summary>
    public interface CallOperationAction : CallAction
    {
        /// <summary>
        ///     The Operation being invoked.
        /// </summary>
        Operation operation { get; set; }

        /// <summary>
        ///     The InputPin that provides the target object to which the Operation call
        ///     request is sent.
        /// </summary>
        InputPin target { get; set; }

        /// <summary>
        ///     Return the in and inout ownedParameters of the Operation being called.
        /// </summary>
        /// <param name="result"></param>
        Parameter inputParameters(Parameter result);

        /// <summary>
        ///     Return the inout, out and return ownedParameters of the Operation being called.
        /// </summary>
        /// <param name="result"></param>
        Parameter outputParameters(Parameter result);
    }
} //end namespace Actions