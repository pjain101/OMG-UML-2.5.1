///////////////////////////////////////////////////////////
//  ActivityPartition.cs
//  Implementation of the Class ActivityPartition
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 21:59:52
//  Original author: Андрей
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using UML.CommonStructure;

namespace UML.Activities
{
    /// <summary>
    ///     An ActivityPartition is a kind of ActivityGroup for identifying ActivityNodes
    ///     that have some characteristic in common.
    /// </summary>
    public interface ActivityPartition : ActivityGroup
    {
        /// <summary>
        ///     Indicates whether the ActivityPartition groups other ActivityPartitions along a
        ///     dimension.
        /// </summary>
        bool isDimension { get; set; }

        /// <summary>
        ///     Indicates whether the ActivityPartition represents an entity to which the
        ///     partitioning structure does not apply.
        /// </summary>
        bool isExternal { get; set; }

        /// <summary>
        ///     ActivityNodes immediately contained in the ActivityPartition.
        /// </summary>
        IEnumerable<ActivityNode> node { get; set; }

        /// <summary>
        ///     ActivityEdges immediately contained in the ActivityPartition.
        /// </summary>
        IEnumerable<ActivityEdge> edge { get; set; }

        /// <summary>
        ///     Other ActivityPartitions immediately contained in this ActivityPartition (as
        ///     its subgroups).
        /// </summary>
        IEnumerable<ActivityPartition> subpartition { get; set; }

        /// <summary>
        ///     An Element represented by the functionality modeled within the
        ///     ActivityPartition.
        /// </summary>
        Element represents { get; set; }
    }
} //end namespace Activities