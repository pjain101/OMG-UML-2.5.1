///////////////////////////////////////////////////////////
//  ExceptionHandler.cs
//  Implementation of the Class ExceptionHandler
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 22:00:00
//  Original author: Андрей
///////////////////////////////////////////////////////////

using UML.Classification;
using UML.CommonStructure;

namespace UML.Activities
{
    /// <summary>
    ///     An ExceptionHandler is an Element that specifies a handlerBody ExecutableNode
    ///     to execute in case the specified exception occurs during the execution of the
    ///     protected ExecutableNode.
    /// </summary>
    public interface ExceptionHandler : Element
    {
        /// <summary>
        ///     An ObjectNode within the handlerBody. When the ExceptionHandler catches an
        ///     exception, the exception token is placed on this ObjectNode, causing the
        ///     handlerBody to execute.
        /// </summary>
        ObjectNode exceptionInput { get; set; }

        /// <summary>
        ///     The Classifiers whose instances the ExceptionHandler catches as exceptions. If
        ///     an exception occurs whose type is any exceptionType, the ExceptionHandler
        ///     catches the exception and executes the handlerBody.
        /// </summary>
        Classifier exceptionType { get; set; }

        /// <summary>
        ///     An ExecutableNode that is executed if the ExceptionHandler catches an exception.
        /// </summary>
        ExecutableNode handlerBody { get; set; }
    }
} //end namespace Activities