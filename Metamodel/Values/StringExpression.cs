///////////////////////////////////////////////////////////
//  StringExpression.cs
//  Implementation of the Class StringExpression
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 22:00:14
//  Original author: Андрей
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using UML.CommonStructure;

namespace UML.Values
{
    /// <summary>
    ///     A StringExpression is an Expression that specifies a String value that is
    ///     derived by concatenating a sequence of operands with String values or a
    ///     sequence of subExpressions, some of which might be template parameters.
    /// </summary>
    public interface StringExpression : Expression, TemplateableElement
    {
        /// <summary>
        ///     The StringExpressions that constitute this StringExpression.
        /// </summary>
        IEnumerable<StringExpression> subExpression { get; set; }

        /// <summary>
        /// The query stringValue() returns the String resulting from concatenating, in
        /// order, all the component String values of all the operands or subExpressions
        /// that are part of the StringExpression.
        /// </summary>
        /// <param name="result"></param>
        //void stringValue(result){

        //}
    }
} //end namespace Values