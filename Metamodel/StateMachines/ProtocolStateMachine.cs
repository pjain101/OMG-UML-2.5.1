///////////////////////////////////////////////////////////
//  ProtocolStateMachine.cs
//  Implementation of the Class ProtocolStateMachine
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 22:00:10
//  Original author: Андрей
///////////////////////////////////////////////////////////

using System.Collections.Generic;

namespace UML.StateMachines
{
    /// <summary>
    ///     A ProtocolStateMachine is always defined in the context of a Classifier. It
    ///     specifies which BehavioralFeatures of the Classifier can be called in which
    ///     State and under which conditions, thus specifying the allowed invocation
    ///     sequences on the Classifier's BehavioralFeatures. A ProtocolStateMachine
    ///     specifies the possible and permitted Transitions on the instances of its
    ///     context Classifier, together with the BehavioralFeatures that carry the
    ///     Transitions. In this manner, an instance lifecycle can be specified for a
    ///     Classifier, by defining the order in which the BehavioralFeatures can be
    ///     activated and the States through which an instance progresses during its
    ///     existence.
    /// </summary>
    public interface ProtocolStateMachine : StateMachine
    {
        /// <summary>
        ///     Conformance between ProtocolStateMachine
        /// </summary>
        IEnumerable<ProtocolConformance> conformance { get; set; }
    }
} //end namespace StateMachines