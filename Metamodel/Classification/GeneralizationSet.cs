///////////////////////////////////////////////////////////
//  GeneralizationSet.cs
//  Implementation of the Class GeneralizationSet
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 22:00:02
//  Original author: Андрей
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using UML.CommonStructure;

namespace UML.Classification
{
    /// <summary>
    ///     A GeneralizationSet is a PackageableElement whose instances represent sets of
    ///     Generalization relationships.
    /// </summary>
    public interface GeneralizationSet : PackageableElement
    {
        /// <summary>
        ///     Indicates (via the associated Generalizations) whether or not the set of
        ///     specific Classifiers are covering for a particular general classifier. When
        ///     isCovering is true, every instance of a particular general Classifier is also
        ///     an instance of at least one of its specific Classifiers for the
        ///     GeneralizationSet. When isCovering is false, there are one or more instances of
        ///     the particular general Classifier that are not instances of at least one of its
        ///     specific Classifiers defined for the GeneralizationSet.
        /// </summary>
        bool isCovering { get; set; }

        /// <summary>
        ///     Indicates whether or not the set of specific Classifiers in a Generalization
        ///     relationship have instance in common. If isDisjoint is true, the specific
        ///     Classifiers for a particular GeneralizationSet have no members in common; that
        ///     is, their intersection is empty. If isDisjoint is false, the specific
        ///     Classifiers in a particular GeneralizationSet have one or more members in
        ///     common; that is, their intersection is not empty.
        /// </summary>
        bool isDisjoint { get; set; }

        /// <summary>
        ///     Designates the Classifier that is defined as the power type for the associated
        ///     GeneralizationSet, if there is one.
        /// </summary>
        Classifier powertype { get; set; }

        /// <summary>
        ///     Designates the instances of Generalization that are members of this
        ///     GeneralizationSet.
        /// </summary>
        IEnumerable<Generalization> generalization { get; set; }
    }
} //end namespace Classification