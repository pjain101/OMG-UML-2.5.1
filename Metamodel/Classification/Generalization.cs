///////////////////////////////////////////////////////////
//  Generalization.cs
//  Implementation of the Class Generalization
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 22:00:02
//  Original author: Андрей
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using UML.CommonStructure;

namespace UML.Classification
{
    /// <summary>
    ///     A Generalization is a taxonomic relationship between a more general Classifier
    ///     and a more specific Classifier. Each instance of the specific Classifier is
    ///     also an instance of the general Classifier. The specific Classifier inherits
    ///     the features of the more general Classifier. A Generalization is owned by the
    ///     specific Classifier.
    /// </summary>
    public interface Generalization : DirectedRelationship
    {
        /// <summary>
        ///     Indicates whether the specific Classifier can be used wherever the general
        ///     Classifier can be used. If true, the execution traces of the specific
        ///     Classifier shall be a superset of the execution traces of the general
        ///     Classifier. If false, there is no such constraint on execution traces. If unset,
        ///     the modeler has not stated whether there is such a constraint or not.
        /// </summary>
        bool isSubstitutable { get; set; }

        /// <summary>
        ///     The general classifier in the Generalization relationship.
        /// </summary>
        Classifier general { get; set; }

        /// <summary>
        ///     Represents a set of instances of Generalization.  A Generalization may appear
        ///     in many GeneralizationSets.
        /// </summary>
        IEnumerable<GeneralizationSet> generalizationSet { get; set; }
    }
} //end namespace Classification