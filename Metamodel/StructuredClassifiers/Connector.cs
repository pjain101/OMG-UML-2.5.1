///////////////////////////////////////////////////////////
//  Connector.cs
//  Implementation of the Class Connector
//  Generated by Enterprise Architect
//  Created on:      31-янв-2019 21:59:56
//  Original author: Андрей
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using UML.Classification;
using UML.CommonBehavior;

namespace UML.StructuredClassifiers
{
    /// <summary>
    ///     A Connector specifies links that enables communication between two or more
    ///     instances. In contrast to Associations, which specify links between any
    ///     instance of the associated Classifiers, Connectors specify links between
    ///     instances playing the connected parts only.
    /// </summary>
    public interface Connector : Feature
    {
        /// <summary>
        ///     Indicates the kind of Connector. This is derived: a Connector with one or more
        ///     ends connected to a Port which is not on a Part and which is not a behavior
        ///     port is a delegation; otherwise it is an assembly.
        /// </summary>
        ConnectorKind kind { get; set; }

        /// <summary>
        ///     An optional Association that classifies links corresponding to this Connector.
        /// </summary>
        Association type { get; set; }

        /// <summary>
        ///     The set of Behaviors that specify the valid interaction patterns across the
        ///     Connector.
        /// </summary>
        IEnumerable<Behavior> contract { get; set; }

        /// <summary>
        ///     A Connector may be redefined when its containing Classifier is specialized. The
        ///     redefining Connector may have a type that specializes the type of the redefined
        ///     Connector. The types of the ConnectorEnds of the redefining Connector may
        ///     specialize the types of the ConnectorEnds of the redefined Connector. The
        ///     properties of the ConnectorEnds of the redefining Connector may be replaced.
        /// </summary>
        IEnumerable<Connector> redefinedConnector { get; set; }

        /// <summary>
        ///     A Connector has at least two ConnectorEnds, each representing the participation
        ///     of instances of the Classifiers typing the ConnectableElements attached to the
        ///     end. The set of ConnectorEnds is ordered.
        /// </summary>
        IEnumerable<ConnectorEnd> end { get; set; }

        /// <summary>
        /// Derivation for Connector::/kind : ConnectorKind
        /// </summary>
        /// <param name="result"></param>
        //ConnectorKind kind(ConnectorKind result){

        //	return null;
        //}
    }
} //end namespace StructuredClassifiers